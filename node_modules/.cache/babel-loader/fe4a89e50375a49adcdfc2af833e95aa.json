{"ast":null,"code":"import memoize from'lodash/memoize';import Matrix from'./matrix';var IE=/Trident/.test(navigator.userAgent);var gloss=0.6;var nPolygons=10;var perspective='2400px';var pageUrl=function pageUrl(pages,page){if(!pages[page])return null;// if (!pages[page].url) return default\nreturn pages[page].url||null;};var canFlipLeft=function canFlipLeft(flip,currentPage,displayedPages,leftPage,pages){return!flip.direction&&currentPage>=displayedPages&&!(displayedPages===1&&!pageUrl(pages,leftPage-1));};var canFlipRight=function canFlipRight(flip,currentPage,nPages,displayedPages){return!flip.direction&&currentPage<nPages-displayedPages;};var polygonWidth=function polygonWidth(pageWidth){var w;w=pageWidth/nPolygons;w=Math.ceil(w+1);return w+'px';};var polygonHeight=function polygonHeight(pageHeight){return pageHeight+'px';};var polygonBgSize=function polygonBgSize(pageWidth,pageHeight){return\"\".concat(pageWidth,\"px \").concat(pageHeight,\"px\");};var makePolygonArray=function makePolygonArray(face,flip,displayedPages,pageWidth,xMargin,spaceTop,minX,maxX,setMinX,setMaxX){var ax,bgImg,bgPos,dRadian,dRotate,direction,gx,i,image,j,lighting,originRight,pageRotation,pageTransform,polygonWidth,progress,rad,radian,radius,ref,results,rotate,tfString,theta,transform,x,z;if(!flip.direction){return[];}progress=flip.progress;direction=flip.direction;if(displayedPages===1&&direction==='left'){progress=1-progress;direction='right';}image=face==='front'?flip.frontImage:flip.backImage;bgImg=image&&\"url('\".concat(image,\"')\");polygonWidth=pageWidth/nPolygons;gx=xMargin;originRight=false;if(displayedPages===1){if(face==='back'){originRight=true;gx=xMargin-pageWidth;}}else{if(direction==='left'){if(face==='back'){gx=pageWidth;}else{originRight=true;}}else{if(face==='front'){gx=pageWidth;}else{originRight=true;}}}pageTransform=new Matrix();pageTransform.translate(gx,spaceTop);pageRotation=0;if(progress>0.5){pageRotation=-(progress-0.5)*2*180;}if(direction==='left'){pageRotation=-pageRotation;}if(face==='back'){pageRotation+=180;}if(pageRotation){if(originRight){pageTransform.translate(pageWidth);}pageTransform.rotateY(pageRotation);if(originRight){pageTransform.translate(-pageWidth);}}if(progress<0.5){theta=progress*2*Math.PI;}else{theta=(1-(progress-0.5)*2)*Math.PI;}if(theta===0){theta=1e-9;}radius=pageWidth/theta;radian=0;dRadian=theta/nPolygons;rotate=dRadian/2/Math.PI*180;dRotate=dRadian/Math.PI*180;if(originRight){rotate=-theta/Math.PI*180+dRotate/2;}if(face==='back'){rotate=-rotate;dRotate=-dRotate;}setMinX(Infinity);setMaxX(-Infinity);results=[];for(i=j=0,ref=nPolygons;0<=ref?j<ref:j>ref;i=0<=ref?++j:--j){bgPos=\"\".concat(i/(nPolygons-1)*100,\"% 0px\");transform=new Matrix(pageTransform);rad=originRight?theta-radian:radian;x=Math.sin(rad)*radius;if(originRight){x=pageWidth-x;}z=(1-Math.cos(rad))*radius;if(face==='back'){z=-z;}transform.translate(x);transform.translateZ(z);transform.rotateY(-rotate);ax=transform.computeX();if(ax>maxX){setMaxX(ax);}ax+=2*polygonWidth;if(ax<minX){setMinX(ax);}lighting=computeLighting(pageRotation-rotate,dRotate);tfString=\"perspective(\".concat(perspective,\") \").concat(transform.toString());radian+=dRadian;rotate+=dRotate;results.push([face+i,bgImg,lighting,bgPos,tfString,Math.abs(Math.round(z))]);}return results;};var computeLighting=function computeLighting(rot,dRotate,ambient){var DEG,POW,blackness,diffuse,gradients,lightingPoints,specular;gradients=[];lightingPoints=[-0.5,-0.25,0,0.25,0.5];if(ambient<1){blackness=1-ambient;diffuse=lightingPoints.map(function(d){return(1-Math.cos((rot-dRotate*d)/180*Math.PI))*blackness;});gradients.push(\"linear-gradient(to right,\\n      rgba(0, 0, 0, \".concat(diffuse[0],\"),\\n      rgba(0, 0, 0, \").concat(diffuse[1],\") 25%,\\n      rgba(0, 0, 0, \").concat(diffuse[2],\") 50%,\\n      rgba(0, 0, 0, \").concat(diffuse[3],\") 75%,\\n      rgba(0, 0, 0, \").concat(diffuse[4],\"))\"));}if(gloss>0&&!IE){DEG=30;POW=200;specular=lightingPoints.map(function(d){return Math.max(Math.pow(Math.cos((rot+DEG-dRotate*d)/180*Math.PI),POW),Math.pow(Math.cos((rot-DEG-dRotate*d)/180*Math.PI),POW));});gradients.push(\"linear-gradient(to right,\\n      rgba(255, 255, 255, \".concat(specular[0]*gloss,\"),\\n      rgba(255, 255, 255, \").concat(specular[1]*gloss,\") 25%,\\n      rgba(255, 255, 255, \").concat(specular[2]*gloss,\") 50%,\\n      rgba(255, 255, 255, \").concat(specular[3]*gloss,\") 75%,\\n      rgba(255, 255, 255, \").concat(specular[4]*gloss,\"))\"));}return gradients.join(',');};var polygonArray=function polygonArray(flip,displayedPages,pageWidth,xMargin,spaceTop,minX,maxX,setMinX,setMaxX){return makePolygonArray('front',flip,displayedPages,pageWidth,xMargin,spaceTop,minX,maxX,setMinX,setMaxX).concat(makePolygonArray('back',flip,displayedPages,pageWidth,xMargin,spaceTop,minX,maxX,setMinX,setMaxX));};export var _canFlipLeft=memoize(canFlipLeft);export var _canFlipRight=memoize(canFlipRight);export var _polygonWidth=memoize(polygonWidth);export var _polygonHeight=memoize(polygonHeight);export var _polygonBgSize=memoize(polygonBgSize);export var _polygonArray=memoize(polygonArray);","map":{"version":3,"sources":["C:/inrich.peter/flip-book-react-master/src/computed.js"],"names":["memoize","Matrix","IE","test","navigator","userAgent","gloss","nPolygons","perspective","pageUrl","pages","page","url","canFlipLeft","flip","currentPage","displayedPages","leftPage","direction","canFlipRight","nPages","polygonWidth","pageWidth","w","Math","ceil","polygonHeight","pageHeight","polygonBgSize","makePolygonArray","face","xMargin","spaceTop","minX","maxX","setMinX","setMaxX","ax","bgImg","bgPos","dRadian","dRotate","gx","i","image","j","lighting","originRight","pageRotation","pageTransform","progress","rad","radian","radius","ref","results","rotate","tfString","theta","transform","x","z","frontImage","backImage","translate","rotateY","PI","Infinity","sin","cos","translateZ","computeX","computeLighting","toString","push","abs","round","rot","ambient","DEG","POW","blackness","diffuse","gradients","lightingPoints","specular","map","d","max","join","polygonArray","concat","_canFlipLeft","_canFlipRight","_polygonWidth","_polygonHeight","_polygonBgSize","_polygonArray"],"mappings":"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","sourcesContent":["import memoize from 'lodash/memoize'\nimport Matrix from './matrix'\n\nconst IE = /Trident/.test(navigator.userAgent)\nconst gloss = 0.6\nconst nPolygons = 10\nconst perspective = '2400px'\n\nconst pageUrl = (pages, page) => {\n  if (!pages[page]) return null\n  // if (!pages[page].url) return default\n  return pages[page].url || null;\n}\n\nconst canFlipLeft = (flip, currentPage, displayedPages, leftPage, pages) => {\n  return (\n    !flip.direction &&\n    (currentPage >= displayedPages) &&\n    !(displayedPages === 1 && !pageUrl(pages, leftPage - 1))\n  )\n}\n\n\nconst canFlipRight = (flip, currentPage, nPages, displayedPages) => {\n  return !flip.direction && currentPage < nPages - displayedPages\n}\n\nconst polygonWidth = pageWidth => {\n  var w;\n  w = pageWidth / nPolygons;\n  w = Math.ceil(w + 1);\n  return w + 'px';\n}\n\nconst polygonHeight = pageHeight => {\n  return pageHeight + 'px';\n}\n\nconst polygonBgSize = (pageWidth, pageHeight) => {\n  return `${pageWidth}px ${pageHeight}px`;\n}\n\nconst makePolygonArray = (face, flip, displayedPages, pageWidth, xMargin, spaceTop, minX, maxX, setMinX, setMaxX) => {\n  var ax,\n      bgImg,\n      bgPos,\n      dRadian,\n      dRotate,\n      direction,\n      gx,\n      i,\n      image,\n      j,\n      lighting,\n      originRight,\n      pageRotation,\n      pageTransform,\n      polygonWidth,\n      progress,\n      rad,\n      radian,\n      radius,\n      ref,\n      results,\n      rotate,\n      tfString,\n      theta,\n      transform,\n      x,\n      z;\n  if (!flip.direction) {\n    return [];\n  }\n  progress = flip.progress;\n  direction = flip.direction;\n  if (displayedPages === 1 && direction === 'left') {\n    progress = 1 - progress;\n    direction = 'right';\n  }\n  image = face === 'front' ? flip.frontImage : flip.backImage;\n  bgImg = image && `url('${image}')`;\n  polygonWidth = pageWidth / nPolygons;\n  gx = xMargin;\n  originRight = false;\n  if (displayedPages === 1) {\n    if (face === 'back') {\n      originRight = true;\n      gx = xMargin - pageWidth;\n    }\n  } else {\n    if (direction === 'left') {\n      if (face === 'back') {\n        gx = pageWidth;\n      } else {\n        originRight = true;\n      }\n    } else {\n      if (face === 'front') {\n        gx = pageWidth;\n      } else {\n        originRight = true;\n      }\n    }\n  }\n  pageTransform = new Matrix();\n  pageTransform.translate(gx, spaceTop);\n  pageRotation = 0;\n  if (progress > 0.5) {\n    pageRotation = -(progress - 0.5) * 2 * 180;\n  }\n  if (direction === 'left') {\n    pageRotation = -pageRotation;\n  }\n  if (face === 'back') {\n    pageRotation += 180;\n  }\n  if (pageRotation) {\n    if (originRight) {\n      pageTransform.translate(pageWidth);\n    }\n    pageTransform.rotateY(pageRotation);\n    if (originRight) {\n      pageTransform.translate(-pageWidth);\n    }\n  }\n  if (progress < 0.5) {\n    theta = progress * 2 * Math.PI;\n  } else {\n    theta = (1 - (progress - 0.5) * 2) * Math.PI;\n  }\n  if (theta === 0) {\n    theta = 1e-9;\n  }\n  radius = pageWidth / theta;\n  radian = 0;\n  dRadian = theta / nPolygons;\n  rotate = dRadian / 2 / Math.PI * 180;\n  dRotate = dRadian / Math.PI * 180;\n  if (originRight) {\n    rotate = -theta / Math.PI * 180 + dRotate / 2;\n  }\n  if (face === 'back') {\n    rotate = -rotate;\n    dRotate = -dRotate;\n  }\n  setMinX(Infinity)\n  setMaxX(-Infinity)\n  results = [];\n  for (i = j = 0, ref = nPolygons; (0 <= ref ? j < ref : j > ref); i = 0 <= ref ? ++j : --j) {\n    bgPos = `${i / (nPolygons - 1) * 100}% 0px`;\n    transform = new Matrix(pageTransform);\n    rad = originRight ? theta - radian : radian;\n    x = Math.sin(rad) * radius;\n    if (originRight) {\n      x = pageWidth - x;\n    }\n    z = (1 - Math.cos(rad)) * radius;\n    if (face === 'back') {\n      z = -z;\n    }\n    transform.translate(x);\n    transform.translateZ(z);\n    transform.rotateY(-rotate);\n    ax = transform.computeX();\n    if (ax > maxX) {\n      setMaxX(ax)\n    }\n    ax += 2 * polygonWidth;\n    if (ax < minX) {\n      setMinX(ax)\n    }\n    lighting = computeLighting(pageRotation - rotate, dRotate);\n    tfString = `perspective(${perspective}) ${transform.toString()}`;\n    radian += dRadian;\n    rotate += dRotate;\n    results.push([face + i, bgImg, lighting, bgPos, tfString, Math.abs(Math.round(z))]);\n  }\n  return results;\n};\n\nconst computeLighting = (rot, dRotate, ambient) => {\n  var DEG, POW, blackness, diffuse, gradients, lightingPoints, specular;\n  gradients = [];\n  lightingPoints = [-0.5, -0.25, 0, 0.25, 0.5];\n  if (ambient < 1) {\n    blackness = 1 - ambient;\n    diffuse = lightingPoints.map((d) => {\n      return (1 - Math.cos((rot - dRotate * d) / 180 * Math.PI)) * blackness;\n    });\n    gradients.push(`linear-gradient(to right,\n      rgba(0, 0, 0, ${diffuse[0]}),\n      rgba(0, 0, 0, ${diffuse[1]}) 25%,\n      rgba(0, 0, 0, ${diffuse[2]}) 50%,\n      rgba(0, 0, 0, ${diffuse[3]}) 75%,\n      rgba(0, 0, 0, ${diffuse[4]}))`);\n  }\n  if (gloss > 0 && !IE) {\n    DEG = 30;\n    POW = 200;\n    specular = lightingPoints.map((d) => {\n      return Math.max(Math.cos((rot + DEG - dRotate * d) / 180 * Math.PI) ** POW, Math.cos((rot - DEG - dRotate * d) / 180 * Math.PI) ** POW);\n    });\n    gradients.push(`linear-gradient(to right,\n      rgba(255, 255, 255, ${specular[0] * gloss}),\n      rgba(255, 255, 255, ${specular[1] * gloss}) 25%,\n      rgba(255, 255, 255, ${specular[2] * gloss}) 50%,\n      rgba(255, 255, 255, ${specular[3] * gloss}) 75%,\n      rgba(255, 255, 255, ${specular[4] * gloss}))`);\n  }\n  return gradients.join(',');\n};\n\nconst polygonArray = (flip, displayedPages, pageWidth, xMargin, spaceTop, minX, maxX, setMinX, setMaxX) => {\n  return makePolygonArray('front', flip, displayedPages, pageWidth, xMargin, spaceTop, minX, maxX, setMinX, setMaxX)\n    .concat(makePolygonArray('back', flip, displayedPages, pageWidth, xMargin, spaceTop, minX, maxX, setMinX, setMaxX))\n}\n\nexport const _canFlipLeft = memoize(canFlipLeft)\nexport const _canFlipRight = memoize(canFlipRight)\nexport const _polygonWidth = memoize(polygonWidth)\nexport const _polygonHeight = memoize(polygonHeight)\nexport const _polygonBgSize = memoize(polygonBgSize)\nexport const _polygonArray = memoize(polygonArray)\n"]},"metadata":{},"sourceType":"module"}